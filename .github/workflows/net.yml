name: .NET CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "stratum"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Install Dependencies
      run: sudo apt-get install -y jq

    - name: Restore Dependencies
      run: dotnet restore src/MessageBroker/MessageBroker.csproj

    - name: Build
      run: dotnet build --configuration Release --no-restore src/MessageBroker/MessageBroker.csproj

    - name: Test
      run: dotnet test --collect:"XPlat Code Coverage" --logger "console;verbosity=minimal" src/MessageBroker.Tests/MessageBroker.csproj

    - name: Publish
      run: dotnet publish src/MessageBroker/MessageBroker.csproj -c Release -o ./publish
       
    - name: Upload Published Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: published-app
        path: ./publish

  push:
    needs: build  # Ensures this job runs only after the build job succeeds
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Published Artifacts
      uses: actions/download-artifact@v4
      with:
        name: published-app
        path: ./publish

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker Image
      run: docker build -t ${{ env.REGISTRY }}/${{ github.repository }}/stratum:latest -f src/MessageBroker/Dockerfile .

    - name: Push Docker Image
      run: docker push ${{ env.REGISTRY }}/${{ github.repository }}/stratum:latest