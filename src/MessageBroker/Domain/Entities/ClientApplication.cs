using Domain.Contracts;
using Domain.ValueObjects;

namespace Domain.Entities;

/// <summary>
/// Represents the default implementation of the 
/// <see cref="ClientApplication{Tkey}"/> entity.
/// </summary>
public sealed class ClientApplication : ClientApplication<string>
{
    /// <summary>
    /// The unique identifier for the client application.
    /// A new GUID is generated by default, represented as a string.
    /// </summary>
    public override string Id { get; set; } = Guid.NewGuid().ToString();

    /// <summary>
    /// The session identifier associated with this client application.
    /// </summary>
    public string SessionId { get; set; } = default!;

    /// <summary>
    /// The session linked to this client application.
    /// </summary>
    public Session Session { get; set; } = default!;

    /// <summary>
    /// A collection of subscriptions related to this client application.
    /// This property is used as a navigation property.
    /// </summary>
    public ICollection<Subscription> Subscriptions { get; set; } = new List<Subscription>();
}

/// <summary>
/// Represents a base class for client applications with a generic key type.
/// Implements the entity status interfaces for creation, modification, and deletion.
/// </summary>
public abstract class ClientApplication<TKey> : IEntityCreationStatus<TKey>,
                                                IEntityModificationStatus<TKey>,
                                                IEntityDeletionStatus<TKey>
    where TKey : IEquatable<TKey>
{
    /// <summary>
    /// The identifier for the client application.
    /// </summary>
    public virtual TKey Id { get; set; } = default!;

    /// <summary>
    /// The name of the client application.
    /// </summary>
    public virtual string Name { get; set; } = default!;

    /// <summary>
    /// The API key associated with the client application.
    /// </summary>
    public virtual string ApiKey { get; set; } = default!;

    /// <summary>
    /// A brief description of the client application.
    /// </summary>
    public virtual string Description { get; set; } = default!;

    /// <summary>
    /// A random value that is updated whenever the entity is persisted.
    /// Used to detect concurrency conflicts.
    /// </summary>
    public virtual string ConcurrencyStamp { get; set; } = Guid.NewGuid().ToString();

    /// <summary>
    /// The creation status of the client application entity.
    /// </summary>
    public EntityCreationStatus<TKey> EntityCreationStatus { get; set; } = default!;

    /// <summary>
    /// The modification status of the client application entity.
    /// </summary>
    public EntityModificationStatus<TKey> EntityModificationStatus { get; set; } = default!;

    /// <summary>
    /// The deletion status of the client application entity.
    /// </summary>
    public EntityDeletionStatus<TKey> EntityDeletionStatus { get; set; } = default!;
}
